on:
  push:
    tags:
      - "v*"
name: Handle Version Tag
jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Generate Release Notes
        run: |
          release_notes=$(gh api repos/{owner}/{repo}/releases/generate-notes -F tag_name=${{ github.ref }} --jq .body)
          echo 'RELEASE_NOTES<<EOF' >> $GITHUB_ENV
          echo "${release_notes}" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ env.RELEASE_NOTES }}
          draft: false
          prerelease: true

  publish_charts:
    name: Publish Charts
    runs-on: ubuntu-latest
    needs:
      - release
    strategy:
      matrix:
        chart:
          - stack
          - tink
          - smee
          - rufio
          - hegel
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Helm
        uses: Azure/setup-helm@v3.3
        with:
          version: v3.9.4

      - name: Login to ghcr.io
        run: echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io/tinkerbell --username ${{ github.actor }} --password-stdin

      - name: Create ${{ matrix.chart }} helm chart package
        run: ver=${GITHUB_REF_NAME}; helm package tinkerbell/${{ matrix.chart }} --dependency-update --version ${ver:1}

      - name: Publish ${{ matrix.chart }} chart to ghcr.io
        run: ver=${GITHUB_REF_NAME}; helm push ${{ matrix.chart }}-${ver:1}.tgz oci://ghcr.io/tinkerbell/charts
